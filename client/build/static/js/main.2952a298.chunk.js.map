{"version":3,"sources":["components/Login/login.js","utils/API.js","components/Search/search.js","components/Results/results.js","components/NoMatch/noMatch.js","App.js","serviceWorker.js","index.js"],"names":["Login","react_default","a","createElement","className","htmlFor","type","id","placeholder","href","role","Component","API","getFlightInfo","iataCode","flightNumber","axios","post","getKitInfo","param","getOpsInfo","get","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchGiphy","then","res","setState","results","data","catch","err","console","log","handleSubmit","event","flightInfo","icaoCode","state","preventDefault","redirectToReferrer","url","window","open","kitList","handleChange","bind","assertThisInitialized","defineProperty","target","name","value","react_router","to","pathname","onSubmit","onChange","defaultValue","Results","NoMatch","App","react_router_dom","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2952a298.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./login.css\";\n\n\nclass Login extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <div className=\"user-input\">\n                    <h4>Sign in to continue</h4>\n\n                    <form>\n\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"empId\">Employee ID</label>\n                            <input type=\"text\" className=\"form-control\" id=\"empIdInput\" placeholder=\"Enter ID\"/>\n\n                        </div>\n\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"empPassword\">Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"passwordInput\" placeholder=\"Password\"/>\n\n                        </div>\n\n                        <a className=\"btn btn-secondary\" href=\"/search\" role=\"button\" type=\"submit\" id=\"login-btn\">Login</a>\n\n                    </form>\n\n                </div>\n    \n            </div>\n          );\n\n    }\n  \n}\n\nexport default Login;","import axios from \"axios\";\n\n// const iataCode = dl;\n// const flightNumber = 9925;\n\nexport default {\n  // Gets Flight Information\n  getFlightInfo: function(iataCode, flightNumber) {\n    return axios.post(\"/api/parameters\" + iataCode + flightNumber);\n  },\n  // Gets Medical Kit Contents\n  getKitInfo: function(param) {\n    return axios.post(\"http://localhost:3001/api/kits/\", param);\n  },\n  // Gets Treatment Procedures\n  getOpsInfo: function(id) {\n    return axios.get(\"/api/ops\" + id);\n  }\n};\n","import React, { Component } from 'react';\nimport \"./search.css\";\nimport { Redirect } from 'react-router-dom'\nimport API from \"../../utils/API\";\n// import SearchBtn from \"../Search/SearchBtn\";\n\n\nclass Search extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            icaoCode: \"\",\n            iataCode: \"\",\n            flightNumber: \"\",\n            kitList: [],\n            redirectToReferrer: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        console.log(this.state.kitList);\n    }\n\n    searchGiphy = param => {\n        API.getKitInfo(param)\n          .then(res => this.setState({ results: res.data.data }))\n          .catch(err => console.log(err));\n      };\n\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n\n        if (this.state.icaoCode === \"AAL\") {\n            this.setState({ iataCode: \"AA\" })\n        } else if (this.state.icaoCode === \"BAW\") {\n            this.setState({ iataCode: \"BA\" })\n        } else if (this.state.icaoCode === \"CPA\") {\n            this.setState({ iataCode: \"CX\" })\n        } else if (this.state.icaoCode === \"ETD\") {\n            this.setState({ iataCode: \"EY\" })\n        } else if (this.state.icaoCode === \"HAL\") {\n            this.setState({ iataCode: \"HA\" })\n        } else if (this.state.icaoCode === \"QFA\") {\n            this.setState({ iataCode: \"QF\" })\n        } else if (this.state.icaoCode === \"QAF\") {\n            this.setState({ iataCode: \"QR\" })\n        } else if (this.state.icaoCode === \"UAL\") {\n            this.setState({ iataCode: \"UA\" })\n        } else if (this.state.icaoCode === \"VIR\") {\n            this.setState({ iataCode: \"VS\" })\n        } else if (this.state.icaoCode === \"VOZ\") {\n            this.setState({ iataCode: \"VA\" })\n        };\n\n        console.log(event.target.value);\n\n    }\n\n    // handleSubmit(event) {\n    //     alert(\"icao: \" + this.state.icaoCode + \" | IATA: \" + this.state.iataCode + \" | Flight Number: \" + this.state.flightNumber);\n    //     event.preventDefault();\n    // }\n\n    handleSubmit = event => {\n        let flightInfo = {\n            icaoCode: this.state.icaoCode,\n            iataCode: this.state.iataCode,\n            flightNumber: this.state.flightNumber\n        }\n        event.preventDefault();\n        if (this.state.icaoCode && this.state.iataCode && this.state.flightNumber) {\n            API.getKitInfo(flightInfo.icaoCode)   \n                .then(\n                    this.setState({ redirectToReferrer: true })\n                )\n                .catch(err => console.log(err));\n        }\n        let url = \"https://flightaware.com/live/flight/\" + flightInfo.icaoCode + flightInfo.flightNumber;\n        window.open(url,'_blank','height=600,width=600');    \n    };\n\n    render() {\n\n        const redirectToReferrer = this.state.redirectToReferrer;\n        if (redirectToReferrer === true) {\n            return <Redirect\n                to={{\n                    pathname: \"/results\",\n                    state: {\n                        icaoCode: this.state.icaoCode,\n                        iataCode: this.state.iataCode,\n                        flightNumber: this.state.flightNumber\n                    }\n                }}\n            />\n        }\n\n        return (\n            <div className=\"container\">\n\n                <div id=\"user-input\">\n\n                    <form onSubmit={this.handleSubmit}>\n                        <h4>Search for a flight</h4>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"selectAirline\">Select Airline</label>\n                            <select className=\"form-control\" id=\"select-airline\" name=\"icaoCode\" value={this.state.value} onChange={this.handleChange}>\n                                <option value=\"\" defaultValue>----------------</option>\n                                <option value=\"AAL\">American Airlines - AA</option>\n                                <option value=\"BAW\">British Airways - BA</option>\n                                <option value=\"CPA\">Cathay Pacific - CX</option>\n                                <option value=\"ETD\">Etihad Airways - EY</option>\n                                <option value=\"HAL\">Hawaiian Airlines - HA</option>\n                                <option value=\"QFA\">Qantas - QF</option>\n                                <option value=\"QAF\">Qatar Airways - QR</option>\n                                <option value=\"UAL\">United Airlines - UA</option>\n                                <option value=\"VIR\">Virgin Atlantic Airways - VS</option>\n                                <option value=\"VOZ\">Virgin Australia - VA</option>\n                            </select>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"flightNumber\">Flight Number</label>\n                            <input type=\"text\" className=\"form-control\" id=\"flight-number\" placeholder=\"----------------\" name=\"flightNumber\" onChange={this.handleChange} />\n                        </div>\n\n                        {/* <a className=\"btn btn-secondary\" href=\"/results\" role=\"button\" type=\"submit\">Submit</a> */}\n                        {/* <a href=\"/results\"> */}\n                        <button className=\"btn btn-secondary\" type=\"submit\">Submit</button>\n                        {/* </a> */}\n\n                    </form>\n\n                </div>\n\n            </div>\n        );\n\n    }\n\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport \"./results.css\";\n\n\nclass Results extends Component {\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                    \n            <div className=\"container\">\n\n                <div className=\"row\">\n\n                    <div className=\"col\">\n                        Flight Information\n                </div>\n\n                    <div className=\"col\">\n                        Medical Kit Contents\n                </div>\n\n                    <div className=\"col\">\n                        Procedures\n                </div>\n\n                </div>\n                <a href=\"/search\">← Back to search</a>\n            </div>\n            </div>\n        );\n\n    }\n\n}\n\nexport default Results;","import React, { Component } from 'react';\n// import \"./NoMatch.css\";\n\nclass NoMatch extends Component {\n\n  render() {\n      return (\n          <div className=\"container\">\n\n              <div className=\"user-input\">\n                  <h4>404 Page Not Found</h4>\n                  \n              </div>\n  \n          </div>\n        );\n\n  }\n\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n// import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login/login'\nimport Search from './components/Search/search'\nimport Results from './components/Results/results'\nimport NoMatch from './components/NoMatch/noMatch'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/results\" component={Results} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}